<div class="row">
    <div class="card col shadow-sm" style="padding: 2rem; border-radius: .8rem; margin-bottom: 16px;">
        <!-- page header -->
        <div class="d-flex align-items-center justify-content-between mb-3">
            <h1>Links</h1>
            <div>
                <button id="reloadBtn" class="btn btn-outline-secondary"><i
                        class="fa fa-sync me-1"></i>Recarregar</button>
                <button id="addBtn" class="btn btn-primary" type="button" data-toggle="modal" data-target="#newModal"><i
                        class="fa fa-plus me-1"></i>Add novo</button>
            </div>
        </div>

        <!-- modal -->
        <div class="modal fade" id="newModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Encurtar novo link</h5>
                        <button type="button" class="btn" data-dismiss="modal" aria-label="Close">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                    <form id="form">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="link"><strong>Link</strong></label>
                                <input type="url" class="form-control" id="linkInput" placeholder="https://example.com"
                                    required>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-secondary"
                                data-dismiss="modal">Cancelar</button>
                            <button id="formBtn" class="btn btn-primary">Encurtar link</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- table -->
        <table id="table" class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Link Original</th>
                    <th>Link Encurtado</th>
                    <th>Total de visitas</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>

        <!-- loading container -->
        <div id="loading" class="d-none">
            <div class="d-flex flex-column justify-content-center align-items-center w-100">
                <div><i class="fa fa-sync fa-spin fa-4x"></i></div>
                <span class="mt-3">Carregando</span>
            </div>
        </div>
    </div>
</div>

<script>
    const reloadBtn = document.getElementById("reloadBtn")
    const loading = document.getElementById("loading")
    const table = document.getElementById("table")
    const form = document.getElementById("form")
    const linkInput = document.getElementById("linkInput")

    const loadLinks = () => {
        return fetch(`/api/links`)
            .then(res => res.json())
            .catch(err => console.error(err))
    }

    const removeLink = (hash) => {
        fetch(`/api/links/${hash}`, { method: 'delete' })
            .then(res => res.json())
            .then(item => {
                Swal.fire({
                    icon: 'success',
                    title: 'Apagado!',
                })
                reloadItems()
            })
            .catch(err => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ocorreu um erro ao deletar este item'
                })
            })
    }

    const createLink = (original) => {
        return fetch(`/api/links`, { method: 'post', headers: { 'content-type': 'application/json' }, body: JSON.stringify({ link: original }) })
            .then(res => res.json())
            .then(item => {
                Swal.fire({
                    icon: 'success',
                    title: 'Link criado!',
                })
                reloadItems()
            })
            .catch(err => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ocorreu um erro ao criar este link'
                })
            })
    }

    const populateTable = (items) => {
        const tbody = table.getElementsByTagName('tbody')[0]

        tbody.innerHTML = ''

        items.forEach((item, idx) => {
            const shortLink = `/l/${item.hash}`

            tbody.innerHTML += `
                <tr>
                    <th scope="row">${idx + 1}</th>
                    <td>${item.original}</td>
                    <td><a href="${shortLink}" target="_blank">${shortLink}</a></td>
                    <td>${item.visits}</td>
                    <td>
                        <button class="btn btn-sm btn-danger" onclick="javascript:(() => removeLink('${item.hash}'))()"><i class="fa fa-times me-1"></i>Remover</button>
                    </td>
                </tr>
            `
        })
    }

    const reloadItems = () => {
        reloadBtn.getElementsByTagName('i')[0].classList.add('fa-spin')
        reloadBtn.disabled = true
        table.getElementsByTagName('tbody')[0].innerHTML = ''
        loading.classList.remove('d-none')

        loadLinks().then((items) => {
            setTimeout(() => {
                reloadBtn.getElementsByTagName('i')[0].classList.remove('fa-spin')
                reloadBtn.disabled = false
                loading.classList.add('d-none')

                populateTable(items)
            }, 500);
        })

    }

    reloadBtn.onclick = event => reloadItems()

    form.onsubmit = event => {
        event.preventDefault()

        createLink(linkInput.value).then(() => {
            form.reset()
            $("#newModal").modal('hide')
        })
    }

    reloadItems()

    setInterval(() => {
        reloadItems()
    }, 10000)
</script>
